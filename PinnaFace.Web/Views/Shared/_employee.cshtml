@using PinnaFace.Core.Enumerations
@using PinnaFace.Core.Models
@model IEnumerable<PinnaFace.Core.Models.EmployeeDTO>

@{
    var imagePath = "../Images/EP9086232_Short.jpg";
}
<div id="table_id">
    <div id="spinner">
    </div>
    
    @if (@Model.Any())
    {
        <div class="alert alert-info fade in @ViewData["ItemSearchHidden"]">
            <button type="button" class="close" data-dismiss="alert">×</button>
            @MvcHtmlString.Create(@ViewData["ItemSearch"].ToString())
        </div>

        <div>
            <h4 style="margin-top: 3px;">@ViewData["EmployeeStatusHeader"] Employees</h4> 
            <p> (@ViewData["totalNumber"]) Employee(s) found</p>
        </div>

        <table class="table table-striped table-condensed table-hover " id="table_id2">

            <tr>
                <th>@Html.DisplayNameFor(model => model.SerialNumber)
                </th>
                <th>Photo</th>
                <th>Agency
                </th>
                <th>Agent
                </th>
                <th>Name
                </th>
                <th>Passport No.
                </th>
                 @*<th>@Html.DisplayNameFor(model => model.Sex)
                </th>
                <th>Age
                </th>*@
                <th>@Html.DisplayNameFor(model => model.VisaDetail)
                </th>
                <th>@Html.DisplayNameFor(model => model.CurrentStatus)
                </th>
                <th style="text-align: center; width: 350px;" class="hidden-print"></th>
            </tr>

            <tbody>
                @foreach (EmployeeDTO employeeDto in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => employeeDto.SerialNumber)
                        </td>
                        <td>
                            
                            @if (employeeDto.Photo != null) 
                            {
                                imagePath = "../Content/Images/" + employeeDto.Photo.RowGuid + ".jpg";
                            }
                            <a href="~/Employee/Details?empId=@employeeDto.IdEncrypted&processStatusId=0&searchText=@ViewData["searchText"]&ageCategoryId=@ViewData["ageCategoryId"]&religionId=@ViewData["religionId"]&languageId=@ViewData["languageId"]&experienceId=@ViewData["experienceId"]">
                                    </a><img  src="@Url.Content(imagePath)" alt="Photo" name="shortPhoto" onError="this.onerror=null;this.src='/images/BlankShort.jpg';"
                                          style="border-radius: 5px; height: 60px; width: 75px;"/>
                        </td>
                        <td>
                            @if (employeeDto.Agency != null)
                            {
                                @Html.ActionLink(@Html.DisplayFor(
                                    modelItem => employeeDto.AgencyName).ToString(), "AgencyDetail", "Home",
                                    new {agencyId = employeeDto.Agency.IdEncrypted}, null)
                            }
                        </td>
                        <td>
                            @if (employeeDto.Agent != null)
                            {
                                @Html.ActionLink(@Html.DisplayFor(
                                    modelItem => employeeDto.AgentName).ToString(), "AgentDetail", "Home",
                                    new {agentId = employeeDto.Agent.IdEncrypted}, null)
                            }
                        </td>
                        <td>
                            @Html.ActionLink(@Html.DisplayFor(
                                modelItem => employeeDto.FirstName).ToString(), "Details", "Employee",
                                new {empId = employeeDto.IdEncrypted,processStatusId=@ViewData["processStatusId"]}, null)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => employeeDto.PassportNumber)
                        </td>
                @*        <td>
                            @Html.DisplayFor(modelItem => employeeDto.Sex)
                        </td>*@
               
                        <td>
                            @if(employeeDto.Visa!=null){
                                @Html.ActionLink(@Html.DisplayFor(modelItem => employeeDto.VisaDetail).ToString(), "Details", "Visa",
                                    new {visaId = employeeDto.Visa.IdEncrypted}, null)}
                            else{ @Html.Display("-") }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => employeeDto.StatusString)
                        </td>
                
                        <td style="text-align: center;" class="hidden-print">
                            @Html.ActionLink("View", "Details", "Employee", new {empId = employeeDto.IdEncrypted}, new {@Class = "btn btn-info btn-small"})
                           
                            @if (employeeDto.Visa == null)
                            {
                                @*Html.ActionLink("Edit", "Edit", "Employee", new {empId = employeeDto.IdEncrypted}, new {@Class = "btn btn-warning btn-small", @style = "margin-right:5px;"})*@
                                @Html.ActionLink("Assign Visa", "Assign", "Employee", new {empId = employeeDto.IdEncrypted}, new {@Class = "btn btn-success btn-small", @style = "margin-right:5px;"})
                                @*Html.ActionLink("Delete", "Delete", "Employee", new {empId = employeeDto.IdEncrypted}, new {@Class = "btn btn-danger btn-small"})
                                 Html.ActionLink("Agreement", "AgreementDocument", "Report", 
                                    new {empId = employeeDto.IdEncrypted}, 
                                    new {@Class = "btn btn-warning btn-small", @target="_blank", @style = "margin-right:5px;"})
                                *@
                            }
                            @if (employeeDto.Visa != null && (employeeDto.CurrentStatus == ProcessStatusTypes.VisaAssigned || employeeDto.CurrentStatus == ProcessStatusTypes.OnProcess))
                            {
                               
                                @Html.ActionLink("Detach Visa", "Detach", "Visa",
                                    new {visaId = employeeDto.Visa.IdEncrypted},
                                    new {@Class = "btn btn-danger btn-small", @style = "margin-right:5px;"})
                                
                            }
                            @if (employeeDto.CurrentStatus == ProcessStatusTypes.OnGoodCondition)
                            {
                                @Html.ActionLink("Add Complain", "Create", "Complain", new {empId = employeeDto.IdEncrypted}, new {@Class = "btn btn-primary btn-small"})
                            }

                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <ul class="pager">
            <li style="display: @ViewData["prevDisabled"];" class="hidden-print">
                @Ajax.ActionLink("← Previous", "Index", "Employee",
                    new
                    {
                        processStatusId = @ViewData["processStatusId"],
                        searchText = @ViewData["SearchText"],
                        page = @ViewData["Page"],
                        pageSize = @ViewData["PageSize"],
                        ptype = -1,
                        categoryId = @ViewData["CategoryId"],
                        filterByQuantity = @ViewData["FilterByQuantity"]
                    }, new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "table_id",
                        LoadingElementId = "spinner"
                    })
            </li>

            <li>
                <span>Page @ViewData["Page"] of @ViewData["totalPages"] </span>
            </li>

            <li style="display: @ViewData["nextDisabled"];" class="hidden-print">
                @Ajax.ActionLink("Next →", "Index", "Employee",
                    new
                    {
                        processStatusId = @ViewData["processStatusId"],
                        searchText = @ViewData["SearchText"],
                        page = @ViewData["Page"],
                        pageSize = @ViewData["PageSize"],
                        ptype = 1,
                        categoryId = @ViewData["CategoryId"],
                        filterByQuantity = @ViewData["FilterByQuantity"]
                    }, new AjaxOptions
                    {
                        HttpMethod = "GET",
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "table_id",
                        LoadingElementId = "spinner"
                    }, new {@style = "width:106px;"})
            </li>
        </ul>
    }
    else
    {
        <h4 class="error"> no employee found...</h4>
    }
</div>