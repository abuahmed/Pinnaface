@model IEnumerable<PinnaFace.Core.Models.VisaDTO>
<div id="table_id">
    <div id="spinner">
    </div>

    @*<div>
        <span>@ViewData["ItemSearch"]</span>
    </div>*@
    
    <div class="alert alert-info fade in @ViewData["ItemSearchHidden"]">
        <button type="button" class="close" data-dismiss="alert">×</button>
        @MvcHtmlString.Create(@ViewData["ItemSearch"].ToString())
    </div>

    <div>
        <h4 style="margin-top: 3px;">@ViewData["VisaStatusHeader"] Visas</h4> 
        <p> (@ViewData["totalNumber"]) Visa(s) found</p>
    </div>

    <table class="table table-striped table-condensed table-hover " id="table_id2">

        <tr>
            <th>@Html.DisplayNameFor(model => model.SerialNumber)
            </th>
        @*    <th>Select Row
            </th>*@
            <th>Local Agency
                </th>
                <th>Foreign Agent
                </th>
       
            <th>@Html.DisplayNameFor(model => model.VisaNumber)
            </th>
            <th>@Html.DisplayNameFor(model => model.Sponsor.FullName)
            </th>
            <th>@Html.DisplayNameFor(model => model.Sponsor.PassportNumber)
            </th>
            <th style="text-align: center;">Visa Qty.
            </th>
            <th>Assigned To
            </th>
           
            <th style="text-align: center; width: 300px;" class="hidden-print"></th>
        </tr>

        <tbody>
            @foreach (var visaDTO in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => visaDTO.SerialNumber)
                    </td>
                   @*  <td>
                        @Html.CheckBoxFor(modelItem => visaDTO.Enabled)
                    </td>*@
                   <td>
                       @if (visaDTO.Agency != null)
                       {
                           @Html.ActionLink(@Html.DisplayFor(
                               modelItem => visaDTO.AgencyName).ToString(), "AgencyDetail", "Home",
                               new {agencyId = visaDTO.Agency.IdEncrypted}, null)
                       }
                   </td>
                         <td>
                             @if (visaDTO.Agent != null)
                             {
                                 @Html.ActionLink(@Html.DisplayFor(
                                     modelItem => visaDTO.AgentName).ToString(), "AgentDetail", "Home",
                                     new {agentId = visaDTO.Agent.IdEncrypted}, null)
                             }
                         </td>
                    <td>
                        @Html.DisplayFor(modelItem => visaDTO.VisaNumber)
                    </td>
                    <td>
                        @Html.ActionLink(@Html.DisplayFor(modelItem => visaDTO.Sponsor.FullName).ToString(), "Details", "Visa", 
                         new { visaId = visaDTO.IdEncrypted },null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => visaDTO.Sponsor.PassportNumber)
                    </td>
                    
                    <td style="text-align: center;">
                        @Html.DisplayFor(modelItem => visaDTO.VisaQuantity)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => visaDTO.VisaStatus)
                    </td>
       
                    <td style="text-align: center;" class="hidden-print hidden-phone">
                        @Html.ActionLink("View", "Details", "Visa", new { visaId = visaDTO.IdEncrypted }, new { @Class = "btn btn-info btn-small" })
                         
                        @if (visaDTO.Employees.Count == 0)
                        {
                            @Html.ActionLink("Edit", "Edit", "Visa", new { visaId = visaDTO.IdEncrypted }, new { @Class = "btn btn-primary btn-small",@style="margin-right: 5px;" }) 

                            @Html.ActionLink("Delete", "Delete", "Visa", new { visaId = visaDTO.IdEncrypted }, new { @Class = "btn btn-danger btn-small" })
                        }
                        @*else if (visaDTO.Employees.Count < visaDTO.VisaQuantity)
                        {
                            Html.ActionLink("Assign", "Assign", "Employee", new {empId = visaDTO.IdEncrypted}, new {@Class = "btn btn-success btn-small", @style = "margin-right:5px;"})
                                                   
                        } *@
                        else if (visaDTO.Employees.Count > 0)
                        {
                            @Html.ActionLink("Detach", "Detach", "Visa", new { visaId = visaDTO.IdEncrypted }, new { @Class = "btn btn-warning btn-small" })
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    
    <ul class="pager">
        <li style="display:@ViewData["prevDisabled"]; " class="hidden-print">
            @Ajax.ActionLink("← Previous", "Index", "Visa",
                new
                {
                    warehouseId = @ViewData["WarehouseId"],
                    searchText = @ViewData["SearchText"],
                    page = @ViewData["Page"],
                    pageSize = @ViewData["PageSize"],
                    ptype = -1,
                    categoryId = @ViewData["CategoryId"],
                    filterByQuantity = @ViewData["FilterByQuantity"]
                }, new AjaxOptions
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "table_id",
                    LoadingElementId = "spinner"
                })
        </li>

        <li>
            <span>Page @ViewData["Page"] of @ViewData["totalPages"] </span>
        </li>

        <li style="display:@ViewData["nextDisabled"]; " class="hidden-print">
            @Ajax.ActionLink("Next →", "Index", "Visa",
                new
                {
                    warehouseId = @ViewData["WarehouseId"],
                    searchText = @ViewData["SearchText"],
                    page = @ViewData["Page"],
                    pageSize = @ViewData["PageSize"],
                    ptype = 1,
                    categoryId = @ViewData["CategoryId"],
                    filterByQuantity = @ViewData["FilterByQuantity"]
                }, new AjaxOptions
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "table_id",
                    LoadingElementId = "spinner"
                }, new { @style = "width: 106px;" })
        </li>
    </ul>

</div>
