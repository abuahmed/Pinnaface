@model PinnaFace.Core.Models.ComplainRemarkDTO

@{
    ViewBag.Title = "Add Complain Remark";
    
}

<style type="text/css">
    .form-control2  {
        /*width:250px;*/
        font-weight: bold;
        font-size: 12px;
        height: 26px;
        padding: 3px 6px;
    }
</style>

<div style="padding: 10px;background: white;">
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ComplainId);
        
        <h4 style="margin-top:10px;">Add Complain Remark</h4>

        <h5 style="margin-top:15px;margin-bottom: 0px;">Complain Detail</h5>
        <hr style="margin-top:0px;margin-bottom: 5px; "/>

        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span12">
                    
                    <div class="form-inline">
                   
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complain.Employee.FullName, "Employee Name: ")
                            @Html.TextBoxFor(model => model.Complain.Employee.FullName,new { @class = "form-control form-control2",@disabled = "disabled" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complain.Employee.Visa.Sponsor.FullName, "Sponsor Name: ")
                            @Html.TextBoxFor(model => model.Complain.Employee.Visa.Sponsor.FullName, new { @class = "form-control form-control2",@disabled = "disabled"})
                        </div>
             
                  
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complain.ComplainDate, "Complain Date")
                            @Html.TextBoxFor(model => model.Complain.ComplainDateString,new { @class = "form-control form-control2",@disabled = "disabled" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complain.Priority, "Priority")
                            @Html.TextBoxFor(model => model.Complain.Priority,new { @class = "form-control form-control2",@disabled = "disabled" })
                        </div>
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complain.Type, "Type ")
                           @Html.TextBoxFor(model => model.Complain.ComplainTypeDescription,new { @class = "form-control form-control2",@disabled = "disabled" })
                        </div>
                  
                        <div class="form-group">
                            @Html.LabelFor(model => model.Complain.Complain, "Complain ")
                            @Html.TextBoxFor(model => model.Complain.Complain,new { @class = "form-control form-control2",@disabled = "disabled" })
                        </div>
                        </div>
                </div>
       
            </div>
        </div>
        

        
        <h5 style="margin-top:15px;margin-bottom: 0px;">Add Remark</h5>
        <hr style="margin-top:0px;margin-bottom: 5px; "/>

        <div class="container-fluid">
            <div class="row-fluid">
                <div class="span5">
                    <div class="form-inline">
               
                        <div class="form-group">
                            @Html.LabelFor(model => model.RemarkDate, "On Date ")
                            @Html.EditorFor(model => model.RemarkDate)
                        </div>

                    </div>

                    <div class="form-inline2">
                        <div class="form-group2">
                            @Html.LabelFor(model => model.Remark, "Remark")
                            @Html.TextAreaFor(model => model.Remark, new { @class = "form-control",@style="width: 95%;"})
                            @Html.ValidationMessageFor(model => model.Remark)
                        </div>
                    </div>
                    
                    <input type="submit" value="Add Remark" class="btn btn-sm btn-primary" style="padding: 5px;margin-top: 10px;" />
                </div>
       
                <div class="span7">
                    <h5>Previous Remarks</h5>
                    <hr style="margin-top:5px;margin-bottom: 5px; "/>
                    
                    <table class="table table-striped table-condensed table-hover" id="table_id2">

                        <tr>
                            <th style="width: 100px;">Date
                            </th>
                            <th>Remark
                            </th>
                    
                        </tr>

                        <tbody>
                            @foreach (var employeeDto in Model.Complain.Remarks)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => employeeDto.ComplainRemarkDateString)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => employeeDto.Remark)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>

            </div>
        </div>
        

    }
</div>


<script type="text/javascript">
    $(document).ready(function () {
        //$.validator.unobtrusive.parse("#reserve");
        $('#loadingDiv').hide();
        //$('.datefield').datepicker();
    });
    
    function wcqChange() {
        var employeeId = $("#employeeId").data("kendoDropDownList").value();
        var categoryId = $("#categoryId").data("kendoDropDownList").value();
        var filterByQuantity = $("#filterByQuantityId").data("kendoDropDownList").value();

        $.ajax({
            type: "GET",
            url: "/OnHandInventory/Index",
            data: { 'employeeId': employeeId, 'categoryId': categoryId, 'filterByQuantity': filterByQuantity },
            contentType: false,
            async: true,
            success: function (inventoryList) {
                $("#table_id").replaceWith(inventoryList);
            },
            error: function () {
                alert("Sorry, there was a problem!");
            }
        });
    }

</script>
